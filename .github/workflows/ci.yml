# SOURCE: https://github.com/dask-contrib/dask-sql/blob/main/.github/workflows/test.yml
name: Test Python package
on:
  push:
    branches:
    - master
  pull_request:

# When this workflow is queued, automatically cancel any previous running
# or pending jobs from the same branch
concurrency:
  group: test-${{ github.head_ref }}
  cancel-in-progress: true

# Required shell entrypoint to have properly activated conda environments
defaults:
  run:
    shell: bash -l {0}

jobs:
  detect-ci-trigger:
    name: Check for upstream trigger phrase
    runs-on: ubuntu-latest
    if: github.repository == 'bossjones/fastapi_pytorch_postgresql_sandbox'
    outputs:
      triggered: ${{ steps.detect-trigger.outputs.trigger-found }}
    steps:
    - uses: actions/checkout@v3
      with:
        fetch-depth: 2
    - uses: xarray-contrib/ci-trigger@v1.2
      id: detect-trigger
      with:
        keyword: "[test-upstream]"

  test:
    name: "Build & Test (${{ matrix.os }}, python: ${{ matrix.python }})"
    needs: [detect-ci-trigger]
    runs-on: ${{ matrix.os }}
    # env:
    #   CONDA_FILE: continuous_integration/environment-${{ matrix.python }}-dev.yaml
    strategy:
      fail-fast: false
      matrix:
        # os: [ubuntu-latest, windows-latest, macos-latest]
        os: [macos-latest]
        # python: ["3.8", "3.9", "3.10"]
        python: ["3.10"]
        # arch: [ amd64, arm64 ]
        arch: [arm64]
    steps:
    - uses: actions/checkout@v3

    - name: SetLocale for ${{ matrix.os }} on ${{ matrix.arch }}
      env:
        LANG: en_US.UTF-8
        LC_CTYPE: en_US.UTF-8
      run: |
        brew update
        brew install icu4c || true
        brew install readline || true
        brew install libxslt || true
        brew install perl || true
        brew install docker colima docker-compose || true
        brew install qemu || true
        brew install bash || true
        brew install lima || true
        brew install jq || true
        brew install curl || true

    - name: start lima for ${{ matrix.os }} on ${{ matrix.arch }}
      env:
        LANG: en_US.UTF-8
        LC_CTYPE: en_US.UTF-8
        LIMA_INSTANCE: "test-upgrade"
      run: |
        alias docker="lima nerdctl"
        limactl start --tty=false "${LIMA_INSTANCE}"
        lima nerdctl info
        make start-docker-ci-d

    # - name: Brew deps for ${{ matrix.os }} on ${{ matrix.arch }}
    #   env:
    #     LANG: en_US.UTF-8
    #     LC_CTYPE: en_US.UTF-8
    #   run: |
    #     brew install cmake || true  # macos image has cmake installed, but a new version may exist; ignore it if so
    #     brew install doxygen || true
    #     brew install hdf5 || true
    #     brew install pkg-config || true
    #     brew install wget || true
    #     brew install jpeg || true
    #     brew install libpng || true
    #     brew install libtiff || true
    #     brew install openexr || true
    #     brew install eigen || true
    #     brew install tbb || true
    #     brew install hdf5 || true
    #     # pytorch
    #     brew install openblas || true
    #     brew install libomp || true
    #     brew install openmpi || true
    #     brew install tcl-tk || true
    #     brew install openssl || true
    #     brew install readline || true
    #     brew install sqlite3 || true
    #     brew install xz || true
    #     brew install zlib || true
    #     # https://techblog.willshouse.com/2013/05/20/brew-install-gnu-stat/
    #     brew install coreutils || true
    #     brew install findutils || true
    #     brew install gnu-tar || true
    #     brew install gnu-sed || true
    #     brew install gawk || true
    #     brew install gnutls || true
    #     brew install gnu-getopt || true
    #     brew install libmagic || true
    #     brew install libffi || true
    #     brew install atomicparsley || true
    #     brew install tree || true
    #     brew install tesseract || true


    #     # https://github.com/jiaaro/pydub#installation
    #     # libav
    #     brew install libav || true
    #     ####    OR    #####
    #     # SOURCE: https://matham.github.io/ffpyplayer/installation.html#using-binary-wheels
    #     # ffmpeg
    #     brew install ffmpeg || true
    #     brew install sdl2 || true
    #     brew install sdl2_mixer || true

    #     make start-docker-services-d

    #     pg_isready -p 5432

    # - name: link environment yaml for ${{ matrix.os }} on ${{ matrix.arch }}
    #   run: |
    #     make link-conda-ci
    # - name: Set up Python for ${{ matrix.os }} on ${{ matrix.arch }}
    #   uses: conda-incubator/setup-miniconda@v2.2.0
    #   with:
    #       # miniforge-variant: Mambaforge
    #       # use-mamba: true
    #     miniconda-version: "latest"
    #     python-version: ${{ matrix.python }}
    #       # channel-priority: strict
    #     activate-environment: fastapi_pytorch_postgresql_sandbox3
    #       # environment-file: ${{ env.CONDA_FILE }}
    #       # NOTE: 'Set this option to "false" to disable running the post cleanup step of the action. Default is "true"'
    #       # SOURCE: https://github.com/conda-incubator/setup-miniconda/blob/7e642bb2e4ca56ff706818a0febf72bb226d348d/action.yml
    #     run-post: ${{ matrix.os != 'windows-latest' && 'true' || 'false' }}

    # - name: Test with pytest for ${{ matrix.os }} on ${{ matrix.arch }}
    #   run: |
    #     inv ci.pytest -vvvvv
    #   # pytest --junitxml=junit/test-results.xml --cov-report=xml -n auto tests --dist loadfile
    # - name: Upload pytest test results
    #   if: always()
    #   uses: actions/upload-artifact@v1
    #   with:
    #     name: pytest-results
    #     path: junit/test-results.xml
    # - name: Upload coverage to Codecov
    #   if: github.repository == 'bossjones/fastapi_pytorch_postgresql_sandbox'
    #   uses: codecov/codecov-action@v3
